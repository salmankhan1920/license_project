// Function to read the license key from a file
function readLicenseKeyFromFile() {
  return new Promise((resolve, reject) => {
    const fileInput = document.createElement('input');
    fileInput.type = 'file';

    fileInput.addEventListener('change', (event) => {
      const file = event.target.files[0];
      const reader = new FileReader();

      reader.onload = () => {
        const fileContents = reader.result;
        const lines = fileContents.trim().split('\n');

        let licenseKey = '';
        let lname = '';
        let iblafp = '';
        let scriptName = '';

        for (const line of lines) {
          const [key, value] = line.split('=');
          if (key.trim() === 'license_key') {
            licenseKey = value.trim();
          } else if (key.trim() === 'lname') {
            lname = value.trim();
          } else if (key.trim() === 'iblafp') {
            iblafp = value.trim();
          } else if (key.trim() === 'script_name') {
            scriptName = value.trim();
          }
        }

       // console.log('License Key:', licenseKey);
        // console.log('lname:', lname);
       //  console.log('iblafp:', iblafp);
       //  console.log('Script Name:', scriptName);

        resolve({ licenseKey, lname, iblafp, scriptName });
      };

      reader.onerror = () => {
        reject('Error reading the file');
      };

      reader.readAsText(file);
    });

    fileInput.click();
  });
}

// Prompt the user to select a file and read the license key
readLicenseKeyFromFile()
  .then(({ licenseKey, lname, iblafp, scriptName }) => {
    // Check if any of the values are empty or None
    if (!licenseKey || !lname || !iblafp || !scriptName) {
      const missingValues = [];
      if (!licenseKey) missingValues.push('license_key');
      if (!lname) missingValues.push('lname');
      if (!iblafp) missingValues.push('iblafp');
      if (!scriptName) missingValues.push('script_name');

      console.log(`The following values are not defined: ${missingValues.join(', ')}`);
      return; // Exit the function without sending the POST request
    }

    // Now, send the POST request with the license key, lname, iblafp, script name, user agent, and window size
    const userAgent = navigator.userAgent;
    const windowSize = `${window.innerWidth}x${window.innerHeight}`;

    fetch('https://tusharsingj40.pythonanywhere.com/verify-license/', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ licenseKey, lname, iblafp, scriptName, userAgent, windowSize })
    })
    .then(response => response.json())
    .then(data => {
      if (data.valid) {
        console.log('License key is valid');
        // Execute the received JavaScript code if the license key is valid
        eval(data.code);
      } else {
        if (data.error && data.error.includes('Script file not found')) {
          console.log('invalid script name');
        } else {
          console.log('Invalid license key');
        }
      }
    })
    .catch(error => {
      console.error('Error verifying license key:', error);
    });
  })
  .catch(error => {
    console.error('Error reading the license key from the file:', error);
  });


